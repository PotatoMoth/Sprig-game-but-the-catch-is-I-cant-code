/*
First time? Check out the tutorial game:
https://sprig.hackclub.com/gallery/getting_started

@title: HELP ME I CANT CODE
@author: 
@tags: []
@addedOn: 2024-00-00
*/

const player = "p"
const codingSkills = "c"
const problem = "r"
const distraction = "d"
const experience = "e"
const smiley = "s"
const failure = "f"
const motivation = "m"

setLegend(
  [ player, bitmap`
................
................
.000000000......
00........00....
0...0....0..00..
0............00.
0...000000....0.
00..0....0....0.
.00...........0.
..00..........0.
....000.....00..
.......00000....
.......0........
......000.......
.......0........
......0.0.......` ],
  [ codingSkills, bitmap`
00D000D00DD00DDD
0DD0D0D0D0D0DDDD
0DD0D0D0D0D00DDD
0DD0D0D0D0D0DDDD
00D000D00DD00DDD
DDDDDDDDDDDDDDDD
000D0D0DDD0D0DDD
0DDD0D0D0D0D0DDD
0DDD0D0DDD0D0DDD
000D00DD0D0D0DDD
DD0D0D0D0D0D0DDD
DD0D0D0D0D0D0DDD
000D0D0D0D0D0DDD
DDDDDDDDDDDDDDDD
DDDDDDDDDDDDDDDD
DDDDDDDDDDDDDDDD`],
  [ problem, bitmap`
LLLLLLLLLLLLLLLL
LLLLLLLLLLLLLLLL
LLLLLLLLLLLLLLLL
L000LLLLLLLL0LLL
L0L0L00L000L000L
L000L0LL0L0L0L0L
L0LLL0LL000L000L
LLLLLLLLLLLLLLLL
L0LL00LLLLLLLLLL
L0L0LL0L00L00LLL
L0L000LL0L0L0LLL
L0L0LLLL0L0L0LLL
L0LL00LL0L0L0LLL
LLLLLLLLLLLLLLLL
LLLLLLLLLLLLLLLL
LLLLLLLLLLLLLLLL`],
  [ distraction, bitmap`
0033030003303333
0303330333303333
0303030003000300
0303033303303303
0033030003303303
3333333333333333
3333333333333333
0000300030330333
0330303330333333
0000303300030333
0330303330330333
0330300030330333
3333333333333333
3000300033333333
3030303033333333
3000303033333333`],
  [ experience, bitmap`
00DDDDDDDDDDDDDD
0DDDDDDDDDDDDDDD
00DDDDDDDDDD0DDD
0DD0D0D000D0D0DD
0DDD0DD0D0D000DD
00D0D0D000D0DDDD
DDDDDDD0DDDD00DD
DDDDDDD0DDDDDDDD
DDDD0DDDDDDDDD0D
D00DDD00DD00D0D0
D0DD0D0D0D0DD000
D0DD0D0D0D00D0DD
DDDDDDDDDDDDDD00
DDDDDDDDDDDDDDDD
DDDDDDDDDDDDDDDD
DDDDDDDDDDDDDDDD`],
  [ smiley, bitmap`
................
...000000.......
...0.....000....
..0.........00..
.0............00
.0...0.........0
.0.............0
00...........0.0
0....0.........0
0....00....0...0
.0....000000...0
.0.............0
.00...........0.
...0..........0.
...0........00..
....00000000....`],
  [ failure, bitmap `
................
................
....00000.......
..00.....0000...
.00..........0..
0.............00
0...0..........0
0..............0
0............0.0
0....000000....0
0....0....0....0
0....0....0....0
0..............0
.00...........00
..000........00.
....0000000000..`],
  [ motivation, bitmap`
DDDDDDDDDDDD0DDD
D00000D000D000DD
D0D0D0D0D0DD0DDD
D0D0D0D000DD0DDD
DDDDDDDDDDDDDDDD
D0DDDDDD0DDD0DDD
DDD0D0D0D0D000DD
D0D0D0D000DD0DDD
D0DD0DD0D0DD0DDD
DDDDDDDDDDDDDDDD
DDDDDDDDDDDDDDDD
D0DDDDDDDDDDDDDD
DDD000DD0DDDDDDD
D0D0D0D0D0DDDDDD
D0D000D0D0DDDDDD
DDDDDDDDDDDDDDDD`]
);

setPushables({
  [ problem ]: [player]
})

setSolids([ player, problem])

onInput("s", () => {
  getFirst(player).y += 1
  checkCollisions()
})

onInput("w", () => {
  getFirst(player).y -= 1
  checkCollisions()
})

onInput("d", () => {
  getFirst(player).x += 1
    checkCollisions()
})

onInput("a", () => {
  getFirst(player).x -= 1
  checkCollisions()
})

setMap(map`
....r.r.r.......
rrrrr.r.r.rr....
......r.r.r.r.r.
p.rrr.r.r.r...r.
....r.r...r...r.
rrr.r.r..r......
....r.r..r......
.rrrr.r.r.......
.r....r.rrrrr...
...rrr......r.rr
..r.......r.r...
.rrrrrrrrrr.rrr.
..............r.
rrrrrrrrrrrrrrr.
......rr....rr..
.c.......rr....r`)

const checkCollisions = () => {
  const playerSprite = getFirst(player)
  const codingSkillsSprites = getAll(codingSkills)
  const experienceSprites = getAll(experience)
  const distractionSprites = getAll(distraction)
  const motivationSprites = getAll(motivation)

    experienceSprites.forEach(experienceSprite => {
    if (playerSprite.x === experienceSprite.x && playerSprite.y === experienceSprite.y) {
      //sound effect here
      setMap(map`
..d.d.d..
p.......m`)
    }
  })

    codingSkillsSprites.forEach(codingSkillsSprite => {
    if (playerSprite.x === codingSkillsSprite.x && playerSprite.y === codingSkillsSprite.y) {
    //sound effect here
    setMap(map`
.r.......
.........
pr.d.d..e
.r.......
.r.......`)
    }
    })

    distractionSprites.forEach(distractionSprite => {
    if (playerSprite.x === distractionSprite.x && playerSprite.y === distractionSprite.y) {
    //negative sound effect here
    setMap(map`
f`)
    }
  })
    motivationSprites.forEach(motivationSprite => {
    if (playerSprite.x === motivationSprite.x && playerSprite.y === motivationSprite.y) {
    setMap(map`.`)
    }
    })
}

//WHEN I WAS A YOUNG BOY
setInterval(() => {
            if (!getFirst(distraction)) return;
            getFirst(distraction).y -= 2
            getAll(distraction)[1].y -= 2
            getAll(distraction)[2].y -= 2
            getAll(distraction)[3].y -= 2
            getAll(distraction)[4].y -= 2
            getAll(distraction)[5].y -= 2
            getAll(distraction)[6].y -= 2
            getAll(distraction)[7].y -= 2
            getAll(distraction)[8].y -= 2
},
  2000)

setInterval(() => {
            if (!getFirst(distraction)) return;
            getFirst(distraction).y += 1
            getAll(distraction)[1].y += 1
            getAll(distraction)[2].y += 1
            getAll(distraction)[3].y += 1
            getAll(distraction)[4].y += 1
            getAll(distraction)[5].y += 1
            getAll(distraction)[6].y += 1
            getAll(distraction)[7].y += 1
            getAll(distraction)[8].y += 1
},
  1000)

setInterval(() => {
  checkCollisions()},
200
  )
